Usage: TestStressTest filename.txt <numclients>

Benvenuto allo stresstest!
Verranno spawnati 3 clients che tenteranno l'apertura e chiusura in tutte le combinazioni del file 'file.txt'. Assicurati che il client possa servire un numero sufficente di clients prima di iniziare il test.



	 [Test stress850:]
	[TEST WRITE-850]
Usage: TestStressTest filename.txt <numclients>

Benvenuto allo stresstest!
Verranno spawnati 3 clients che tenteranno l'apertura e chiusura in tutte le combinazioni del file 'file.txt'. Assicurati che il client possa servire un numero sufficente di clients prima di iniziare il test.


Processi spawnati. Aspetto che escano
Usage: TestStressTest filename.txt <numclients>

Benvenuto allo stresstest!
Verranno spawnati 3 clients che tenteranno l'apertura e chiusura in tutte le combinazioni del file 'file.txt'. Assicurati che il client possa servire un numero sufficente di clients prima di iniziare il test.



	 [Test stress848:]
	[TEST WRITE-848]

	[PRIMO TEST WRITE-848: SEEK_SET]

	[V-848] Test superato correttamente!

	[SECONDO TEST-848: SEEK_END]
Letto: Io sono il primo testoE DI TEST! :D mi devo creare il file ogni volta che voglio far euna prova percio LOLOL 
questo e' il secondo test della write.Sto inviando il comando: POS 0 SIZE 22

Sto inviando il comando: POS 110 SIZE 38


	[V-848] Test superato correttamente!

	 [Test stress866:]

	 [Test della READ 866]:
 * Scrivo dati nel file (mydfs_write) 866
Sto inviando il comando: POS 0 SIZE 44

 * 1- Simulazione fseek(SEEK_SET866)

	[V-866] Test 1 superato correttamente!
Inizio test varie modalita' di seek:

[2 - MYSEEK_CUR 866]
Letti 44 dati, Buffer contiene: 'Questo e' un test della read, ma scrivo pure'

	[V-866] Test 2 superato correttamente!
[3 - MYSEEK_END 866]

	[V-866] Test 3 superato correttamente!
[4- MYSEEK_SET]

	[V] Test 4 superato correttamente!
 * Seek to 0
[5 - Inizio test di read piu lunga]

	[V-866] Test 5 superato correttamente!

	[V-866] Test read concluso
Processi spawnati. Aspetto che escano
Usage: TestStressTest filename.txt <numclients>

Benvenuto allo stresstest!
Verranno spawnati 3 clients che tenteranno l'apertura e chiusura in tutte le combinazioni del file 'file.txt'. Assicurati che il client possa servire un numero sufficente di clients prima di iniziare il test.



	 [Test stress849:]
	[TEST WRITE-849]

	[PRIMO TEST WRITE-849: SEEK_SET]

	[V-849] Test superato correttamente!

	[SECONDO TEST-849: SEEK_END]
Letto: Io sono il primo testoE DI TEST! :D mi devo creare il file ogni volta che voglio far euna prova percio LOLOL 
questo e' il secondo test della write.Sto inviando il comando: POS 0 SIZE 22

Sto inviando il comando: POS 110 SIZE 38


	[V-849] Test superato correttamente!

	 [Test stress865:]

	 [Test della READ 865]:
 * Scrivo dati nel file (mydfs_write) 865
Sto inviando il comando: POS 0 SIZE 44

 * 1- Simulazione fseek(SEEK_SET865)

	[V-865] Test 1 superato correttamente!
Inizio test varie modalita' di seek:

[2 - MYSEEK_CUR 865]
Letti 44 dati, Buffer contiene: 'Questo e' un test della read, ma scrivo pure'

	[V-865] Test 2 superato correttamente!
[3 - MYSEEK_END 865]

	[V-865] Test 3 superato correttamente!
[4- MYSEEK_SET]

	[V] Test 4 superato correttamente!
 * Seek to 0
[5 - Inizio test di read piu lunga]

	[V-865] Test 5 superato correttamente!

	[V-865] Test read concluso
Processi spawnati. Aspetto che escano
Usage: TestStressTest filename.txt <numclients>

Benvenuto allo stresstest!
Verranno spawnati 3 clients che tenteranno l'apertura e chiusura in tutte le combinazioni del file 'file.txt'. Assicurati che il client possa servire un numero sufficente di clients prima di iniziare il test.



	 [Test stress848:]
	[TEST WRITE-848]

	[PRIMO TEST WRITE-848: SEEK_SET]

	[V-848] Test superato correttamente!

	[SECONDO TEST-848: SEEK_END]
Letto: Io sono il primo testoE DI TEST! :D mi devo creare il file ogni volta che voglio far euna prova percio LOLOL 
questo e' il secondo test della write.Sto inviando il comando: POS 0 SIZE 22

Sto inviando il comando: POS 110 SIZE 38


	[V-848] Test superato correttamente!
Processi spawnati. Aspetto che escano
[HB:6] Connessione chiusa.
Usage: TestStressTest filename.txt <numclients>

Benvenuto allo stresstest!
Verranno spawnati 3 clients che tenteranno l'apertura e chiusura in tutte le combinazioni del file 'file.txt'. Assicurati che il client possa servire un numero sufficente di clients prima di iniziare il test.



	 [Test stress849:]
	[TEST WRITE-849]

	[PRIMO TEST WRITE-849: SEEK_SET]

	[V-849] Test superato correttamente!

	[SECONDO TEST-849: SEEK_END]
Letto: Io sono il primo testoE DI TEST! :D mi devo creare il file ogni volta che voglio far euna prova percio LOLOL 
questo e' il secondo test della write.Sto inviando il comando: POS 0 SIZE 22

Sto inviando il comando: POS 110 SIZE 38


	[V-849] Test superato correttamente!
Processi spawnati. Aspetto che escano
[HB:6] Connessione chiusa.
Usage: TestStressTest filename.txt <numclients>

Benvenuto allo stresstest!
Verranno spawnati 3 clients che tenteranno l'apertura e chiusura in tutte le combinazioni del file 'file.txt'. Assicurati che il client possa servire un numero sufficente di clients prima di iniziare il test.



	 [Test stress848:]
	[TEST WRITE-848]

	[PRIMO TEST WRITE-848: SEEK_SET]

	[V-848] Test superato correttamente!

	[SECONDO TEST-848: SEEK_END]
Letto: Io sono il primo testoE DI TEST! :D mi devo creare il file ogni volta che voglio far euna prova percio LOLOL 
questo e' il secondo test della write.Sto inviando il comando: POS 0 SIZE 22

Sto inviando il comando: POS 110 SIZE 38


	[V-848] Test superato correttamente!

	 [Test stress864:]

	 [Test della READ 864]:
 * Scrivo dati nel file (mydfs_write) 864
Sto inviando il comando: POS 0 SIZE 44

 * 1- Simulazione fseek(SEEK_SET864)

	[V-864] Test 1 superato correttamente!
Inizio test varie modalita' di seek:

[2 - MYSEEK_CUR 864]
Letti 44 dati, Buffer contiene: 'Questo e' un test della read, ma scrivo pure'

	[V-864] Test 2 superato correttamente!
[3 - MYSEEK_END 864]

	[V-864] Test 3 superato correttamente!
[4- MYSEEK_SET]

	[V] Test 4 superato correttamente!
 * Seek to 0
[5 - Inizio test di read piu lunga]

	[V-864] Test 5 superato correttamente!

	[V-864] Test read concluso

	 [Test stress883:]
	[TEST WRITE-883]

	[PRIMO TEST WRITE-883: SEEK_SET]

	[V-883] Test superato correttamente!

	[SECONDO TEST-883: SEEK_END]
Letto: Io sono il primo testoa read, ma scrivo purecreare il file ogni volta che voglio far euna prova percio LOLOL 
questo e' il secondo test della write.questo e' il secondo test della write.Sto inviando il comando: POS 0 SIZE 22

Sto inviando il comando: POS 148 SIZE 38


	[V-883] Test superato correttamente!
Processi spawnati. Aspetto che escano
Usage: TestStressTest filename.txt <numclients>

Benvenuto allo stresstest!
Verranno spawnati 3 clients che tenteranno l'apertura e chiusura in tutte le combinazioni del file 'file.txt'. Assicurati che il client possa servire un numero sufficente di clients prima di iniziare il test.



	 [Test stress848:]
	[TEST WRITE-848]

	[PRIMO TEST WRITE-848: SEEK_SET]

	[V-848] Test superato correttamente!

	[SECONDO TEST-848: SEEK_END]
Letto: Io sono il primo testoE DI TEST! :D mi devo creare il file ogni volta che voglio far euna prova percio LOLOL 
questo e' il secondo test della write.Sto inviando il comando: POS 0 SIZE 22

Sto inviando il comando: POS 110 SIZE 38


	[V-848] Test superato correttamente!

	 [Test stress864:]

	 [Test della READ 864]:
 * Scrivo dati nel file (mydfs_write) 864
Sto inviando il comando: POS 0 SIZE 44

 * 1- Simulazione fseek(SEEK_SET864)

	[V-864] Test 1 superato correttamente!
Inizio test varie modalita' di seek:

[2 - MYSEEK_CUR 864]
Letti 44 dati, Buffer contiene: 'Questo e' un test della read, ma scrivo pure'

	[V-864] Test 2 superato correttamente!
[3 - MYSEEK_END 864]

	[V-864] Test 3 superato correttamente!
[4- MYSEEK_SET]

	[V] Test 4 superato correttamente!
 * Seek to 0
[5 - Inizio test di read piu lunga]

	[V-864] Test 5 superato correttamente!

	[V-864] Test read concluso
Processi spawnati. Aspetto che escano
[HB:8] Connessione chiusa.
[HB:10] Connessione chiusa.
